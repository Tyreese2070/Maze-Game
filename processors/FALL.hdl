/*
 * FALL
 * Author: Tyreese Green
 */

CHIP FALL {
   IN A, B, C, D, f1, f0; // Inputs (A,B,C,D) Selection bits (f1, f0)

   // F and G for individual chips are Fzero, Fone, Gtwo....
   OUT F, G, E;

   PARTS:
   // So E is only used when F is used - when f1,f0 = (0,0)
   Or(a=f1, b=f0, out=Eout1);
   Not(in=Eout1, out=Eout2);
   And(a=Eout2, b=Ethree, out=E);

   FZero(A=A, B=B, C=C, D=D, F=Fzero, G=Gzero);
   FOne(A=A, B=B, C=C, D=D, F=Fone, G=Gone);
   FTwo(A=A, B=B, C=C, D=D, F=Ftwo, G=Gtwo);
   FThree(A=A, B=B, C=C, D=D, F=Fthree, G=Gthree, E=Ethree);
   
   // MUX for F
   Mux(a=Fthree, b=Fone, sel=f1, out=FMux1);
   Mux(a=Ftwo, b=Fzero, sel=f1, out=FMux2);
   Mux(a=FMux1, b=FMux2, sel=f0, out=F);

   // MUX for G
   Mux(a=Gthree, b=Gone, sel=f1, out=GMux1);
   Mux(a=Gtwo, b=Gzero, sel=f1, out=GMux2);
   Mux(a=GMux1, b=GMux2, sel=f0, out=G);
/*
   //FZero
   Not(in=C, out=Fzero);
   Not(in=D, out=Gzero);

   // FOne
   And(a=A, b=C, out=Fone);
   And(a=B, b=D, out=Gone);

   //FTwo
   Or(a=A, b=C, out=Ftwo);
   Or(a=B, b=D, out=Gtwo);

   // FThree
   // OUT E
   And(a=A, b=B, out=E00);
   And(a=D, b=E00, out=E01);

   And(a=B, b=C, out=E10);
   And(a=D, b=E10, out=E11);

   And(a=A, b=C, out=E20);

   Or(a=E01, b=E11, out=E30);
   Or(a=E30, b=E20, out=Ethree);
   
   // OUT G
   Not(in=B, out=notB);

   And(a=B, b=notD, out=G00);
   And(a=D, b=notB, out=G10);
   Or(a=G00, b=G10, out=Gthree);
   

   // OUT F
   Not(in=A, out=notA);

   And(a=notA, b=C, out=F00);
   And(a=F00, b=notB, out=F01);

   Not(in=C, out=notC);

   Not(in=D, out=notD);
   
   And(a=A, b=notC, out=F10);
   And(a=F10, b=notD, out=F11);

   And(a=notC, b=A, out=F20);
   And(a=F20, b=notB, out=F21);

   And(a=notA, b=C, out=F30);
   And(a=F30, b=notD, out=F31);

   And(a=notA, b=B, out=F40);
   And(a=notC, b=D, out=F41);
   And(a=F40, b=F41, out=F42);

   And(a=A, b=B, out=F50);
   And(a=C, b=D, out=F51);
   And(a=F50, b=F51, out=F52);

   Or(a=F01, b=F11, out=F60);
   Or(a=F21, b=F31, out=F61);
   Or(a=F42, b=F52, out=F62);
   Or(a=F60, b=F61, out=F63);
   Or(a=F63, b=F62, out=Fthree); */
}